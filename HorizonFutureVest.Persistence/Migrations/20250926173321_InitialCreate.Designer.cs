// <auto-generated />
using HorizonFutureVest.Persistence.DbContextHorizon;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorizonFutureVest.Persistence.Migrations
{
    [DbContext(typeof(HorizonContext))]
    [Migration("20250926173321_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.ConfiguracionTasas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("TasaMaxima")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("TasaMinima")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracionTasas", (string)null);
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.IndicadorPorPais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MacroindicadorId")
                        .HasColumnType("int");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MacroindicadorId");

                    b.HasIndex("PaisId", "MacroindicadorId", "Year")
                        .IsUnique();

                    b.ToTable("IndicadorPorPais", (string)null);
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.MacroIndicador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsMejorMasAlto")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Peso")
                        .HasPrecision(5, 4)
                        .HasColumnType("decimal(5,4)");

                    b.HasKey("Id");

                    b.ToTable("MacroIndicador", (string)null);
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.MacroIndicadorSimulacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MacroindicadorId")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoSimulacion")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("MacroindicadorId")
                        .IsUnique();

                    b.ToTable("MacroIndicadorSimulacion", (string)null);
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIso")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoIso")
                        .IsUnique();

                    b.ToTable("Pais", (string)null);
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.IndicadorPorPais", b =>
                {
                    b.HasOne("HorizonFutureVest.Persistence.Entities.MacroIndicador", "Macroindicador")
                        .WithMany("IndicadoresPorPais")
                        .HasForeignKey("MacroindicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HorizonFutureVest.Persistence.Entities.Pais", "Pais")
                        .WithMany("IndicadoresPorPais")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Macroindicador");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.MacroIndicadorSimulacion", b =>
                {
                    b.HasOne("HorizonFutureVest.Persistence.Entities.MacroIndicador", "Macroindicador")
                        .WithMany("MacroindicadoresSimulacion")
                        .HasForeignKey("MacroindicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Macroindicador");
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.MacroIndicador", b =>
                {
                    b.Navigation("IndicadoresPorPais");

                    b.Navigation("MacroindicadoresSimulacion");
                });

            modelBuilder.Entity("HorizonFutureVest.Persistence.Entities.Pais", b =>
                {
                    b.Navigation("IndicadoresPorPais");
                });
#pragma warning restore 612, 618
        }
    }
}
